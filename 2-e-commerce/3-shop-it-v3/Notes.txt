




design issues with react/react-native only 
-------------------------------------------

==> state , state-change & n/wing logic tightly coupled with UI components
==> state scattered acros UI components, 
   
causes

  => components are heavy-weight, i.e not re-usable
  => unit-testing not possible

----------------------------------------------  


solutions:

      => using state/data management Libraries


      on react-native,


         1. redux
         2. Mobx
         3. mongodb realm 

         +

         4 useReducer hook



--------------------------------------------------


basic steps working with redux
---------------------------------

step-1 : identify state that represent UI
         - cart
         - items/products
         - reviews
         - user
         ....
step-2 : identify which force/ation that cause state change
        - BUY
        - LOAD_ITEMS
        - LOAD_REVIEWS
        - ADD_NEW_REVIEW
        - LOGIN
        - LOGOUT
        ....
step-3 : define 'reducer' to make new state for an action

step-4 : create store with reducer 

